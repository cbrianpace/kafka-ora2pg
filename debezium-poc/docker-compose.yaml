version: '2'
services:
  oracle:
    container_name: oracle
    build:
      context: oracle
    ports:
     - 1521:1521
    environment:
     - ORACLE_PWD=welcome1
    volumes:
     - /app/docker/oracle/oradata:/opt/oracle/oradata
     - /app/docker/oracle/diag:/opt/oracle/diag
  postgres:
    container_name: postgres
    build:
      context: postgres
    volumes:
      - /app/docker/postgres/pgdata:/pgdata
    ports:
      - "5433:5433"
    environment:
      PG_MODE: primary
      MODE: postgres
      PG_USER: appuser
      PG_PASSWORD: welcome1
      PG_DATABASE: app
      PG_PRIMARY_USER: appuser
      PG_PRIMARY_PORT: 5433
      PG_PRIMARY_PASSWORD: welcome1
      PG_ROOT_PASSWORD: welcome1
      PGHOST: /tmp
      PGDATA_PATH_OVERRIDE: pg14
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.2.1
    ports:
     - 9092:9092
     - 29092:29092
     - 9999:9999
    environment:
     ZOOKEEPER_CONNECT: zookeeper:2181
     ADV_HOST: 127.0.0.1
     RUNTESTS: 0
     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
     KAFKA_BROKER_ID: 1
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
     - zookeeper
    links:
     - zookeeper
  connect:
    # image: debezium/connect-with-oracle-jdbc:1.9
    container_name: kafka-connect
    build:
      context: connect
    ports:
     - 8083:8083
     - 9080:9080
     - 9012:9012
    links:
     - kafka
     - zookeeper
     - oracle
     - postgres
    depends_on:
     - kafka
    environment:
     - BOOTSTRAP_SERVERS=kafka:19092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - LD_LIBRARY_PATH=/instant_client
     - KAFKA_DEBUG=true
     - DEBUG_SUSPEND_FLAG=n
    #  - JAVA_DEBUG_PORT=0.0.0.0:5005
     - KAFKA_OPTS=-javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=9080:/kafka/etc/config.yml
     - JMXPORT=9012
     - JMXHOST=0.0.0.0
  prometheus:
    container_name: prometheus
    build:
      context: debezium-prometheus
      args:
        PROMETHEUS_VERSION: v2.26.0
    ports:
     - 9090:9090
    links:
     - connect
    depends_on:
     - connect
  grafana:
    container_name: grafana
    build:
      context: debezium-grafana
      args:
        GRAFANA_VERSION: 7.5.5
    ports:
     - 3000:3000
    links:
     - prometheus
    depends_on:
     - prometheus
    environment:
     - DS_PROMETHEUS=prometheus
